//bridge-file-version: #14
// All The Items Challenge (1.16.4)
// @threadsmind

let system = server.registerSystem(0, 0);

// quick list of player data for session
let playerData = {};

// an event bucket that will store events that are fired before the player's data is initialized for the session.
let eventQueue = [];

system.initialize = function () {
    // set up the event listener for the whole dang thing
    this.listenForEvent("minecraft:entity_acquired_item", e => this.hiOnPickup(e));
};

// TODO probably don't need this?
system.update = function () { };

system.hiOnPickup = function (e) {
    // filter for only player events
    if (e.data.entity.__identifier__ == "minecraft:player") {
        // check if player is already on the quick list
        if (!playerData[e.data.entity.id]) {
            // if not, that means this player has not yet been flagged by the server this session
            // Get player name
            const name = this.getComponent(e.data.entity, "minecraft:nameable").data.name;
            // add player id to session data
            playerData[e.data.entity.id] = { session: false, items: [] };
            // execute a tag list command for their name
            this.executeCommand(`/tag ${name} list`, (resultData) => this.listCommandCallback(resultData));
        }
        // if player session is not ready queue events for execute callback
        if (playerData[e.data.entity.id] && !playerData[e.data.entity.id].session) {
            const name = this.getComponent(e.data.entity, "minecraft:nameable").data.name;
            eventQueue.push({ name: name, event: e });
        }
        // if player has picked up a new item...
        if (playerData[e.data.entity.id] &&
            playerData[e.data.entity.id].items.includes(e.data.item_stack.__identifier__.replace("minecraft:", ""))
        ) {
            // Get player name
            const name = this.getComponent(e.data.entity, "minecraft:nameable").data.name;
            // remove old tag from player
            const oldTag = playerData[e.data.entity.id].tag;
            this.executeCommand(`/tag ${name} remove ${oldTag}`, rd => this.testCallback(rd));
            // remove new item from playerDate.items
            playerData[e.data.entity.id].items = filter(
                playerData[e.data.entity.id].items,
                e.data.item_stack.__identifier__.replace("minecraft:", "")
            );
            // add new tag to player
            const newTag = playerData[e.data.entity.id].items.join(":");
            this.executeCommand(`/tag ${name} add ${newTag}`, rd => this.testCallback(rd));
            // stash tag for next time
            playerData[e.data.entity.id].tag = newTag;
            // display celebratory server message
            var itemName = e.data.item_stack.__identifier__.replace("minecraft:", "");
            let chatEvent = this.createEventData("minecraft:display_chat_event");
            chatEvent.data.message = `${name} has discovered ${itemName}!`;
            this.broadcastEvent("minecraft:display_chat_event", chatEvent);
        }
    }
}

// this callback function is called by the list command execution for players picking up an item for the first time in a session
system.listCommandCallback = function (e) {
    // get the command's return message & split message by words
    let messageArray = e.data.statusMessage.split(" ");
    // extract player name (always element 0)
    let name = messageArray[0];
    // if player has any tags, they will begin at element 4 in the message array
    let tag = null;
    if (messageArray[4]) {
        // starting at element 4, push all tags to the tags container
        for (let i = 4; i < messageArray.length; i++) {
            if (messageArray[i].includes("itemList")) {
                // remove list commas and fill out tag var
                tag = messageArray[i].replace(",", "");
            }
        }
    }
    if (!tag) {
        // if the player has no tag, add a full fresh tag
        tag = `itemList:${itemList.join(":")}`;
        // add initial tag or just invoke the command to execute the callback
        this.executeCommand(`/tag ${name} add ${tag}`, (resultData) => this.initialTagCallback(resultData));
    } else {
        // if the player already has a tag, just run through the current event queue
        this.clearQueue(name, tag);
    }
}

// called from list ballback
system.initialTagCallback = function (e) {
    // get the command's return message & split message by words
    let messageArray = e.data.statusMessage.split(" ");
    // grab the player name
    const name = messageArray[messageArray.length - 1];
    // once we know which player we need by name 
    // look for their queued event(s) in the event queue
    this.clearQueue(name, messageArray[2].replace("'", "").replace("'", ""));
}

// clears any events queued up before the initial callbacks are finished
system.clearQueue = function (name, tag) {
    eventQueue.forEach(e => {
        if (e.name == name) {
            // set session to true & fill out playerData
            if (!playerData[e.event.data.entity.id].session) {
                playerData[e.event.data.entity.id].session = true;
                playerData[e.event.data.entity.id].items = tag.split(":");
                playerData[e.event.data.entity.id].tag = tag;
            }
            // re-run the on pick up function for each queued event
            this.hiOnPickup(e.event);
        }
    });
}

// executing commands seemed to have issues without a callback, so I added this...
system.testCallback = function (e) { }

// apparently this version of JS doesn't have array.filter() so this exists
function filter(oldArray, unwantedItem) {
    let newArray = [];
    for (let i = 0; i < oldArray.length; i++) {
        if (oldArray[i] !== unwantedItem) { newArray.push(oldArray[i]) }
    }
    return newArray;
}

// all minecraft items (probably) minus items that require data (colored flowers, colorder glass, leaves, etc)
// Would be great if this big list weren't necessary, but there is no item-lookup API (as of time of writing)
var itemList = [
    "stone",
    "grass",
    "dirt",
    "cobblestone",
    "planks",
    "sapling",
    "sand",
    "gravel",
    "gold_ore",
    "iron_ore",
    "coal_ore",
    "log",
    "leaves",
    "sponge",
    "glass",
    "lapis_ore",
    "lapis_block",
    "dispenser",
    "sandstone",
    "noteblock",
    "bed",
    "golden_rail",
    "detector_rail",
    "sticky_piston",
    "web",
    "tallgrass",
    "deadbush",
    "piston",
    "wool",
    "red_flower",
    "brown_mushroom",
    "red_mushroom",
    "gold_block",
    "iron_block",
    "stone_slab",
    "brick_block",
    "tnt",
    "bookshelf",
    "mossy_cobblestone",
    "obsidian",
    "torch",
    "oak_stairs",
    "chest",
    "diamond_ore",
    "diamond_block",
    "crafting_table",
    "wheat",
    "furnace",
    "ladder",
    "rail",
    "stone_stairs",
    "lever",
    "stone_pressure_plate",
    "iron_door",
    "wooden_pressure_plate",
    "redstone_ore",
    "redstone_torch",
    "stone_button",
    "ice",
    "snow",
    "cactus",
    "clay",
    "reeds",
    "jukebox",
    "fence",
    "pumpkin",
    "netherrack",
    "soul_sand",
    "glowstone",
    "lit_pumpkin",
    "cake",
    "wooden_trapdoor",
    "stonebrick",
    "brown_mushroom_block",
    "red_mushroom_block",
    "iron_bars",
    "glass_pane",
    "melon_block",
    "vine",
    "fence_gate",
    "brick_stairs",
    "stone_brick_stairs",
    "mycelium",
    "waterlily",
    "nether_brick_block",
    "nether_brick_fence",
    "nether_brick_stairs",
    "nether_wart",
    "enchanting_table",
    "brewing_stand",
    "cauldron",
    "end_stone",
    "dragon_egg",
    "redstone_lamp",
    "dropper",
    "activator_rail",
    "sandstone_stairs",
    "emerald_ore",
    "ender_chest",
    "tripwire_hook",
    "emerald_block",
    "spruce_stairs",
    "birch_stairs",
    "jungle_stairs",
    "command_block",
    "beacon",
    "cobblestone_wall",
    "flower_pot",
    "wooden_button",
    "skull",
    "anvil",
    "trapped_chest",
    "light_weighted_pressure_plate",
    "heavy_weighted_pressure_plate",
    "daylight_detector",
    "redstone_block",
    "quartz_ore",
    "hopper",
    "quartz_block",
    "quartz_stairs",
    "wooden_slab",
    "stained_hardened_clay",
    "stained_glass_pane",
    "log2",
    "acacia_stairs",
    "dark_oak_stairs",
    "slime",
    "iron_trapdoor",
    "prismarine",
    "sealantern",
    "hay_block",
    "carpet",
    "hardened_clay",
    "coal_block",
    "packed_ice",
    "double_plant",
    "red_sandstone",
    "red_sandstone_stairs",
    "stone_slab2",
    "spruce_fence_gate",
    "birch_fence_gate",
    "jungle_fence_gate",
    "dark_oak_fence_gate",
    "acacia_fence_gate",
    "grass_path",
    "chorus_flower",
    "purpur_block",
    "purpur_stairs",
    "undyed_shulker_box",
    "end_bricks",
    "end_rod",
    "magma",
    "nether_wart_block",
    "red_nether_brick",
    "bone_block",
    "shulker_box",
    "purple_glazed_terracotta",
    "white_glazed_terracotta",
    "orange_glazed_terracotta",
    "magenta_glazed_terracotta",
    "light_blue_glazed_terracotta",
    "yellow_glazed_terracotta",
    "lime_glazed_terracotta",
    "pink_glazed_terracotta",
    "gray_glazed_terracotta",
    "silver_glazed_terracotta",
    "cyan_glazed_terracotta",
    "blue_glazed_terracotta",
    "brown_glazed_terracotta",
    "green_glazed_terracotta",
    "red_glazed_terracotta",
    "black_glazed_terracotta",
    "concrete",
    "concretepowder",
    "underwater_torch",
    "stained_glass",
    "podzol",
    "observer",
    "prismarine_stairs",
    "dark_prismarine_stairs",
    "prismarine_bricks_stairs",
    "stripped_spruce_log",
    "stripped_birch_log",
    "stripped_jungle_log",
    "stripped_acacia_log",
    "stripped_dark_oak_log",
    "stripped_oak_log",
    "blue_ice",
    "seagrass",
    "coral",
    "coral_block",
    "coral_fan",
    "coral_fan_dead",
    "coral_fan_hang",
    "coral_fan_hang2",
    "coral_fan_hang3",
    "dried_kelp_block",
    "acacia_button",
    "birch_button",
    "dark_oak_button",
    "jungle_button",
    "spruce_button",
    "acacia_trapdoor",
    "birch_trapdoor",
    "dark_oak_trapdoor",
    "jungle_trapdoor",
    "spruce_trapdoor",
    "acacia_pressure_plate",
    "birch_pressure_plate",
    "dark_oak_pressure_plate",
    "jungle_pressure_plate",
    "spruce_pressure_plate",
    "carved_pumpkin",
    "sea_pickle",
    "conduit",
    "turtle_egg",
    "barrier",
    "stone_slab3",
    "bamboo",
    "scaffolding",
    "stone_slab4",
    "granite_stairs",
    "diorite_stairs",
    "andesite_stairs",
    "polished_granite_stairs",
    "polished_diorite_stairs",
    "polished_andesite_stairs",
    "mossy_stone_brick_stairs",
    "smooth_red_sandstone_stairs",
    "smooth_sandstone_stairs",
    "end_brick_stairs",
    "mossy_cobblestone_stairs",
    "normal_stone_stairs",
    "smooth_stone",
    "red_nether_brick_stairs",
    "smooth_quartz_stairs",
    "lectern",
    "grindstone",
    "blast_furnace",
    "stonecutter_block",
    "smoker",
    "cartography_table",
    "fletching_table",
    "smithing_table",
    "barrel",
    "loom",
    "bell",
    "lantern",
    "lava_cauldron",
    "jigsaw",
    "wood",
    "composter",
    "wither_rose",
    "bee_nest",
    "beehive",
    "honey_block",
    "honeycomb_block",
    "lodestone",
    "crimson_roots",
    "warped_roots",
    "crimson_stem",
    "warped_stem",
    "warped_wart_block",
    "crimson_fungus",
    "warped_fungus",
    "shroomlight",
    "weeping_vines",
    "crimson_nylium",
    "warped_nylium",
    "basalt",
    "polished_basalt",
    "soul_soil",
    "target",
    "stripped_crimson_stem",
    "stripped_warped_stem",
    "crimson_planks",
    "warped_planks",
    "crimson_trapdoor",
    "warped_trapdoor",
    "crimson_stairs",
    "warped_stairs",
    "crimson_fence",
    "warped_fence",
    "crimson_fence_gate",
    "warped_fence_gate",
    "crimson_button",
    "warped_button",
    "crimson_pressure_plate",
    "warped_pressure_plate",
    "crimson_slab",
    "warped_slab",
    "soul_torch",
    "soul_lantern",
    "netherite_block",
    "ancient_debris",
    "respawn_anchor",
    "blackstone",
    "polished_blackstone_bricks",
    "polished_blackstone_brick_stairs",
    "blackstone_stairs",
    "blackstone_wall",
    "polished_blackstone_brick_wall",
    "chiseled_polished_blackstone",
    "cracked_polished_blackstone_bricks",
    "gilded_blackstone",
    "blackstone_slab",
    "polished_blackstone_brick_slab",
    "chain",
    "twisting_vines",
    "nether_gold_ore",
    "crying_obsidian",
    "polished_blackstone",
    "polished_blackstone_stairs",
    "polished_blackstone_slab",
    "polished_blackstone_pressure_plate",
    "polished_blackstone_button",
    "polished_blackstone_wall",
    "warped_hyphae",
    "crimson_hyphae",
    "stripped_crimson_hyphae",
    "stripped_warped_hyphae",
    "chiseled_nether_bricks",
    "cracked_nether_bricks",
    "quartz_bricks",
    "iron_shovel",
    "iron_pickaxe",
    "iron_axe",
    "flint_and_steel",
    "apple",
    "bow",
    "arrow",
    "coal",
    "diamond",
    "iron_ingot",
    "gold_ingot",
    "iron_sword",
    "wooden_sword",
    "wooden_shovel",
    "wooden_pickaxe",
    "wooden_axe",
    "stone_sword",
    "stone_shovel",
    "stone_pickaxe",
    "stone_axe",
    "diamond_sword",
    "diamond_shovel",
    "diamond_pickaxe",
    "diamond_axe",
    "stick",
    "bowl",
    "mushroom_stew",
    "golden_sword",
    "golden_shovel",
    "golden_pickaxe",
    "golden_axe",
    "string",
    "feather",
    "gunpowder",
    "wooden_hoe",
    "stone_hoe",
    "iron_hoe",
    "diamond_hoe",
    "golden_hoe",
    "wheat_seeds",
    "wheat",
    "bread",
    "leather_helmet",
    "leather_chestplate",
    "leather_leggings",
    "leather_boots",
    "chainmail_helmet",
    "chainmail_chestplate",
    "chainmail_leggings",
    "chainmail_boots",
    "iron_helmet",
    "iron_chestplate",
    "iron_leggings",
    "iron_boots",
    "diamond_helmet",
    "diamond_chestplate",
    "diamond_leggings",
    "diamond_boots",
    "golden_helmet",
    "golden_chestplate",
    "golden_leggings",
    "golden_boots",
    "flint",
    "porkchop",
    "cooked_porkchop",
    "painting",
    "golden_apple",
    "sign",
    "wooden_door",
    "bucket",
    "minecart",
    "saddle",
    "redstone",
    "snowball",
    "boat",
    "leather",
    "kelp",
    "brick",
    "clay_ball",
    "reeds", // todo
    "paper",
    "book",
    "slime_ball",
    "chest_minecart",
    "egg",
    "compass",
    "fishing_rod",
    "clock",
    "glowstone_dust",
    "fish",
    "cooked_fish",
    "dye",
    "bone",
    "sugar",
    "repeater",
    "cookie",
    "map",
    "shears",
    "melon",
    "pumpkin_seeds",
    "melon_seeds",
    "beef",
    "cooked_beef",
    "chicken",
    "cooked_chicken",
    "rotten_flesh",
    "ender_pearl",
    "blaze_rod",
    "ghast_tear",
    "gold_nugget",
    "potion",
    "glass_bottle",
    "spider_eye",
    "fermented_spider_eye",
    "blaze_powder",
    "magma_cream",
    "brewing_stand",
    "cauldron",
    "ender_eye",
    "speckled_melon",
    "experience_bottle",
    "fireball",
    "writable_book",
    "written_book",
    "emerald",
    "frame",
    "flower_pot",
    "carrot",
    "potato",
    "baked_potato",
    "poisonous_potato",
    "emptymap",
    "golden_carrot",
    "skull",
    "carrotonastick",
    "netherstar",
    "pumpkin_pie",
    "firework_rocket",
    "fireworkscharge",
    "enchanted_book",
    "comparator",
    "netherbrick",
    "quartz",
    "tnt_minecart",
    "hopper_minecart",
    "prismarine_shard",
    "rabbit",
    "cooked_rabbit",
    "rabbit_stew",
    "rabbit_foot",
    "rabbit_hide",
    "horsearmorleather",
    "horsearmoriron",
    "horsearmorgold",
    "horsearmordiamond",
    "lead",
    "name_tag",
    "prismarine_crystals",
    "muttonraw",
    "muttoncooked",
    "armor_stand",
    "end_crystal",
    "spruce_door",
    "birch_door",
    "jungle_door",
    "acacia_door",
    "dark_oak_door",
    "chorus_fruit",
    "chorus_fruit_popped",
    "banner_pattern",
    "dragon_breath",
    "splash_potion",
    "lingering_potion",
    "elytra",
    "shulker_shell",
    "banner",
    "super_fertilizer",
    "totem",
    "iron_nugget",
    "trident",
    "beetroot",
    "beetroot_seeds",
    "beetroot_soup",
    "salmon",
    "clownfish",
    "pufferfish",
    "cooked_salmon",
    "dried_kelp",
    "nautilus_shell",
    "appleenchanted",
    "heart_of_the_sea",
    "turtle_shell_piece",
    "turtle_helmet",
    "phantom_membrane",
    "crossbow",
    "spruce_sign",
    "birch_sign",
    "jungle_sign",
    "acacia_sign",
    "darkoak_sign",
    "sweet_berries",
    "record_13",
    "record_cat",
    "record_blocks",
    "record_chirp",
    "record_far",
    "record_mall",
    "record_mellohi",
    "record_stal",
    "record_strad",
    "record_ward",
    "record_11",
    "record_wait",
    "shield",
    "campfire",
    "suspicious_stew",
    "honeycomb",
    "honey_bottle",
    "lodestonecompass",
    "netherite_ingot",
    "netherite_sword",
    "netherite_shovel",
    "netherite_pickaxe",
    "netherite_axe",
    "netherite_hoe",
    "netherite_helmet",
    "netherite_chestplate",
    "netherite_leggings",
    "netherite_boots",
    "netherite_scrap",
    "crimson_sign",
    "warped_sign",
    "crimson_door",
    "warped_door",
    "warped_fungus_on_a_stick",
    "record_pigstep",
    "nether_sprouts",
    "soul_campfire",
];
